/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package branch_management;

import java.awt.Dialog;
import static java.awt.SystemColor.text;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.event.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import main.first_page;

/**
 *
 * @author Acer pv
 */
public class branch_frame extends javax.swing.JFrame {

    /**
     * Creates new form branch_frame
     */
    public branch_frame() {
        initComponents();
        connect();
        showBranch();
    }

    Connection con;
    PreparedStatement pst;
    Statement st;

    public void connect() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/project_db", "root", "kido1412");
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }
    }

    public void showBranch() {

        try {
            st = con.createStatement();
            String query = "select * from branch";
            ResultSet rs = st.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();
            int column_count = rsmd.getColumnCount();
            DefaultTableModel defaultTableModel = (DefaultTableModel) branch_tb.getModel();
            defaultTableModel.setColumnCount(0);
            defaultTableModel.setRowCount(0);

            for (int j = 0; j < column_count;) {
                defaultTableModel.addColumn(rsmd.getColumnName(++j));
            }
            while (rs.next()) {
                String tablearray[] = new String[column_count];
                for (int i = 1, k = 0; i <= column_count;) {
                    tablearray[k] = rs.getString(i++);
                    k++;
                }
                defaultTableModel.addRow(tablearray);
            }
        } catch (SQLException ex) {
            Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBranch_City = new javax.swing.JTextField();
        txtBranch_Assets = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        add_btn = new javax.swing.JButton();
        txtBranch_Id = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        branch_tb = new javax.swing.JTable();
        search_place = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        refresh_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Branch ID:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Branch City:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Assets:");

        txtBranch_City.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBranch_CityKeyPressed(evt);
            }
        });

        txtBranch_Assets.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBranch_AssetsKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ADD New Branch");

        add_btn.setBackground(new java.awt.Color(255, 255, 255));
        add_btn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        add_btn.setForeground(new java.awt.Color(51, 51, 51));
        add_btn.setText("Add");
        add_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_btnMouseClicked(evt);
            }
        });

        txtBranch_Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBranch_IdKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBranch_City)
                            .addComponent(txtBranch_Assets)
                            .addComponent(txtBranch_Id, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBranch_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBranch_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBranch_Assets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setText("Branch Infomation");

        branch_tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        });
        branch_tb.getTableHeader().setReorderingAllowed(false);
        branch_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                branch_tbMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(branch_tb);

        search_place.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_placeKeyReleased(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_search_20px.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        refresh_btn.setText("Refresh");
        refresh_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_btnMouseClicked(evt);
            }
        });

        delete_btn.setText("Delete");
        delete_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delete_btnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(search_place, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search_place, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    update_branch update = new update_branch(new javax.swing.JFrame(), true);
    private void branch_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_branch_tbMouseClicked

        if (evt.getClickCount() == 2) {

            int index = branch_tb.getSelectedRow();
            TableModel model = branch_tb.getModel();
            String branchId = (String) model.getValueAt(index, 0);
            String branchCity = (String) model.getValueAt(index, 1);
            String branchAssets = (String) model.getValueAt(index, 2);

            update.txtBranch_ID.setText(branchId);
            update.txtBranch_Assets.setText(branchAssets);
            update.txtBranch_City.setText(branchCity);

            update.setVisible(true);
            update.pack();
            update.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_branch_tbMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        first_page p = new first_page();
        p.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    public static boolean isNumber(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private void add_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_btnMouseClicked

        String id, assets, city;

        id = txtBranch_Id.getText();
        assets = txtBranch_Assets.getText();
        city = txtBranch_City.getText();
        if (isNumber(id) && isNumber(assets)) {
            try {
                pst = con.prepareStatement("insert into branch (branch_id, branch_city, assets) values (?,?,?)");
                pst.setString(1, id);
                pst.setString(2, city);
                pst.setString(3, assets);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Successfully");
                showBranch();
                txtBranch_Id.setText("");
                txtBranch_Assets.setText("");
                txtBranch_City.setText("");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Branch id already existed");
//            Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "ID and assets must be a number");
        }

    }//GEN-LAST:event_add_btnMouseClicked

    private void refresh_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_btnMouseClicked
        showBranch();
    }//GEN-LAST:event_refresh_btnMouseClicked

    private void delete_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delete_btnMouseClicked
        int index = branch_tb.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Choose a row you want to delete first");
        } else {
            TableModel model = branch_tb.getModel();
            String branchId = (String) model.getValueAt(index, 0);
            try {
                pst = con.prepareStatement("delete from branch where branch_id = '" + branchId + "'");
                int dialogButton = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);

                if (dialogButton == JOptionPane.YES_OPTION) {
                    pst.executeUpdate();
                    showBranch();
                }
            } catch (SQLException ex) {
                Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_delete_btnMouseClicked

    private void txtBranch_AssetsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBranch_AssetsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id, assets, city;

            id = txtBranch_Id.getText();
            assets = txtBranch_Assets.getText();
            city = txtBranch_City.getText();
            if (isNumber(id) && isNumber(assets)) {
                try {
                    pst = con.prepareStatement("insert into branch (branch_id, branch_city, assets) values (?,?,?)");
                    pst.setString(1, id);
                    pst.setString(2, city);
                    pst.setString(3, assets);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Successfully");
                    showBranch();
                    txtBranch_Id.setText("");
                    txtBranch_Assets.setText("");
                    txtBranch_City.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Branch id already existed");
//            Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ID and assets must be a number");
            }
        }
    }//GEN-LAST:event_txtBranch_AssetsKeyPressed

    private void txtBranch_CityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBranch_CityKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id, assets, city;

            id = txtBranch_Id.getText();
            assets = txtBranch_Assets.getText();
            city = txtBranch_City.getText();
            if (isNumber(id) && isNumber(assets)) {
                try {
                    pst = con.prepareStatement("insert into branch (branch_id, branch_city, assets) values (?,?,?)");
                    pst.setString(1, id);
                    pst.setString(2, city);
                    pst.setString(3, assets);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Successfully");
                    showBranch();
                    txtBranch_Id.setText("");
                    txtBranch_Assets.setText("");
                    txtBranch_City.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Branch id already existed");
//            Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ID and assets must be a number");
            }
        }
    }//GEN-LAST:event_txtBranch_CityKeyPressed

    private void txtBranch_IdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBranch_IdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String id, assets, city;

            id = txtBranch_Id.getText();
            assets = txtBranch_Assets.getText();
            city = txtBranch_City.getText();
            if (isNumber(id) && isNumber(assets)) {
                try {
                    pst = con.prepareStatement("insert into branch (branch_id, branch_city, assets) values (?,?,?)");
                    pst.setString(1, id);
                    pst.setString(2, city);
                    pst.setString(3, assets);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Successfully");
                    showBranch();
                    txtBranch_Id.setText("");
                    txtBranch_Assets.setText("");
                    txtBranch_City.setText("");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Branch id already existed");
//            Logger.getLogger(branch_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "ID and assets must be a number");
            }
        }
    }//GEN-LAST:event_txtBranch_IdKeyPressed

    public void search(String str){
        DefaultTableModel model = (DefaultTableModel) branch_tb.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        branch_tb.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
    private void search_placeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_placeKeyReleased
        String searchString = search_place.getText();
        search(searchString);
    }//GEN-LAST:event_search_placeKeyReleased
    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_btn;
    private javax.swing.JTable branch_tb;
    private javax.swing.JButton delete_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton refresh_btn;
    private javax.swing.JTextField search_place;
    private javax.swing.JTextField txtBranch_Assets;
    private javax.swing.JTextField txtBranch_City;
    private javax.swing.JTextField txtBranch_Id;
    // End of variables declaration//GEN-END:variables

}
